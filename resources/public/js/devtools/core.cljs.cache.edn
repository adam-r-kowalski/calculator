;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name devtools.core, :imports nil, :requires {prefs devtools.prefs, sanity-hints devtools.sanity-hints, devtools.dirac devtools.dirac, custom-formatters devtools.custom-formatters, devtools.sanity-hints devtools.sanity-hints, devtools.util devtools.util, goog.userAgent goog.userAgent, util devtools.util, ua goog.userAgent, devtools.custom-formatters devtools.custom-formatters, dirac devtools.dirac, devtools.prefs devtools.prefs}, :uses nil, :defs {enable! {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 82, :column 7, :end-line 82, :end-column 14, :arglists (quote ([]))}, :name devtools.core/enable!, :variadic false, :file "resources/public/js/devtools/core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-prefs {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 46, :column 7, :end-line 46, :end-column 16, :arglists (quote ([]))}, :name devtools.core/get-prefs, :variadic false, :file "resources/public/js/devtools/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, set-pref! {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 49, :column 7, :end-line 49, :end-column 16, :arglists (quote ([pref val]))}, :name devtools.core/set-pref!, :variadic false, :file "resources/public/js/devtools/core.cljs", :end-column 16, :method-params ([pref val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pref val]))}, feature-available? {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 77, :column 7, :end-line 77, :end-column 25, :arglists (quote ([& features])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(features)], :arglists ([& features]), :arglists-meta (nil)}}, :name devtools.core/feature-available?, :variadic true, :file "resources/public/js/devtools/core.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(features)], :arglists ([& features]), :arglists-meta (nil)}, :method-params [(features)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 0, :fn-var true, :arglists ([& features])}, warn-feature-not-available {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 18, :column 17, :end-line 18, :end-column 43, :dynamic true, :arglists (quote ([feature]))}, :name devtools.core/warn-feature-not-available, :variadic false, :file "resources/public/js/devtools/core.cljs", :end-column 43, :method-params ([feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([feature]))}, set-single-feature! {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 52, :column 7, :end-line 52, :end-column 26, :arglists (quote ([feature val]))}, :name devtools.core/set-single-feature!, :variadic false, :file "resources/public/js/devtools/core.cljs", :end-column 26, :method-params ([feature val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([feature val]))}, install! {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 23, :column 7, :end-line 23, :end-column 15, :arglists (quote ([]))}, :name devtools.core/install!, :variadic false, :file "resources/public/js/devtools/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, set-prefs! {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 43, :column 7, :end-line 43, :end-column 17, :arglists (quote ([new-prefs]))}, :name devtools.core/set-prefs!, :variadic false, :file "resources/public/js/devtools/core.cljs", :end-column 17, :method-params ([new-prefs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([new-prefs]))}, enable-single-feature! {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 57, :column 7, :end-line 57, :end-column 29, :arglists (quote ([feature]))}, :name devtools.core/enable-single-feature!, :variadic false, :file "resources/public/js/devtools/core.cljs", :end-column 29, :method-params ([feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([feature]))}, disable! {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 87, :column 7, :end-line 87, :end-column 15, :arglists (quote ([]))}, :name devtools.core/disable!, :variadic false, :file "resources/public/js/devtools/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, known-features {:name devtools.core/known-features, :file "resources/public/js/devtools/core.cljs", :line 9, :column 1, :end-line 9, :end-column 20, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 9, :column 6, :end-line 9, :end-column 20}}, single-feature-available? {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 71, :column 7, :end-line 71, :end-column 32, :arglists (quote ([feature]))}, :name devtools.core/single-feature-available?, :variadic false, :file "resources/public/js/devtools/core.cljs", :end-column 32, :method-params ([feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([feature]))}, enable-feature! {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 63, :column 7, :end-line 63, :end-column 22, :arglists (quote ([& features])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(features)], :arglists ([& features]), :arglists-meta (nil)}}, :name devtools.core/enable-feature!, :variadic true, :file "resources/public/js/devtools/core.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(features)], :arglists ([& features]), :arglists-meta (nil)}, :method-params [(features)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 0, :fn-var true, :arglists ([& features])}, disable-single-feature! {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 60, :column 7, :end-line 60, :end-column 30, :arglists (quote ([feature]))}, :name devtools.core/disable-single-feature!, :variadic false, :file "resources/public/js/devtools/core.cljs", :end-column 30, :method-params ([feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([feature]))}, disable-feature! {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 67, :column 7, :end-line 67, :end-column 23, :arglists (quote ([& features])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(features)], :arglists ([& features]), :arglists-meta (nil)}}, :name devtools.core/disable-feature!, :variadic true, :file "resources/public/js/devtools/core.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(features)], :arglists ([& features]), :arglists-meta (nil)}, :method-params [(features)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 0, :fn-var true, :arglists ([& features])}, uninstall! {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 38, :column 7, :end-line 38, :end-column 17, :arglists (quote ([]))}, :name devtools.core/uninstall!, :variadic false, :file "resources/public/js/devtools/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, missing-feature-warning {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/core.cljs", :line 14, :column 17, :end-line 14, :end-column 40, :dynamic true, :arglists (quote ([feature known-features]))}, :name devtools.core/missing-feature-warning, :variadic false, :file "resources/public/js/devtools/core.cljs", :end-column 40, :method-params ([feature known-features]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([feature known-features]))}}, :require-macros {dirac devtools.dirac, devtools.dirac devtools.dirac}, :cljs.analyzer/constants {:seen #{:install-custom-formatters :install-sanity-hints :dirac :install-dirac-support :sanity-hints :custom-formatters}, :order [:custom-formatters :dirac :sanity-hints :install-custom-formatters :install-dirac-support :install-sanity-hints]}, :doc nil}