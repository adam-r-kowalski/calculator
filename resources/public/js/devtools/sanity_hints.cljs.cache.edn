;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name devtools.sanity-hints, :imports nil, :requires {devtools.prefs devtools.prefs, stacktrace cljs.stacktrace, cljs.stacktrace cljs.stacktrace, ua goog.labs.userAgent.browser, goog.labs.userAgent.browser goog.labs.userAgent.browser}, :uses {pref devtools.prefs}, :defs {mark-null-call-site-location {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 69, :column 7, :end-line 69, :end-column 35, :arglists (quote ([file line-number column]))}, :name devtools.sanity-hints/mark-null-call-site-location, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 35, :method-params ([file line-number column]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 3, :fn-var true, :arglists (quote ([file line-number column]))}, mark-call-closed-at-column {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 63, :column 7, :end-line 63, :end-column 33, :arglists (quote ([line column]))}, :name devtools.sanity-hints/mark-call-closed-at-column, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 33, :method-params ([line column]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([line column]))}, error-object-sense {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 82, :column 7, :end-line 82, :end-column 25, :arglists (quote ([error]))}, :name devtools.sanity-hints/error-object-sense, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 25, :method-params ([error]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 1, :fn-var true, :arglists (quote ([error]))}, *original-global-error-handler* {:name devtools.sanity-hints/*original-global-error-handler*, :file "resources/public/js/devtools/sanity_hints.cljs", :line 33, :column 1, :end-line 33, :end-column 51, :dynamic true, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 33, :column 20, :end-line 33, :end-column 51, :dynamic true}}, *original-type-error-prototype-to-string* {:name devtools.sanity-hints/*original-type-error-prototype-to-string*, :file "resources/public/js/devtools/sanity_hints.cljs", :line 34, :column 1, :end-line 34, :end-column 61, :dynamic true, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 34, :column 20, :end-line 34, :end-column 61, :dynamic true}}, *installed?* {:name devtools.sanity-hints/*installed?*, :file "resources/public/js/devtools/sanity_hints.cljs", :line 32, :column 1, :end-line 32, :end-column 32, :dynamic true, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 32, :column 20, :end-line 32, :end-column 32, :dynamic true}}, global-error-handler {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 102, :column 7, :end-line 102, :end-column 27, :arglists (quote ([message url line column error]))}, :name devtools.sanity-hints/global-error-handler, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 27, :method-params ([message url line column error]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 5, :fn-var true, :arglists (quote ([message url line column error]))}, install! {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 118, :column 7, :end-line 118, :end-column 15, :arglists (quote ([]))}, :name devtools.sanity-hints/install!, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ajax-reader {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 41, :column 7, :end-line 41, :end-column 18, :arglists (quote ([url]))}, :name devtools.sanity-hints/ajax-reader, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 18, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, get-line {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 51, :column 7, :end-line 51, :end-column 15, :arglists (quote ([lines line-number]))}, :name devtools.sanity-hints/get-line, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 15, :method-params ([lines line-number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([lines line-number]))}, extend-content {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 54, :column 7, :end-line 54, :end-column 21, :arglists (quote ([content lines line-number min-length]))}, :name devtools.sanity-hints/extend-content, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 21, :method-params ([content lines line-number min-length]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 4, :fn-var true, :arglists (quote ([content lines line-number min-length]))}, retrieve-javascript-source {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 47, :column 7, :end-line 47, :end-column 33, :arglists (quote ([where]))}, :name devtools.sanity-hints/retrieve-javascript-source, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 33, :method-params ([where]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([where]))}, available? {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 6, :column 17, :end-line 6, :end-column 27, :dynamic true, :arglists (quote ([]))}, :name devtools.sanity-hints/available?, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, empty-as-nil {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 38, :column 7, :end-line 38, :end-column 19, :arglists (quote ([str]))}, :name devtools.sanity-hints/empty-as-nil, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 19, :method-params ([str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([str]))}, make-sense-of-the-error {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 77, :column 7, :end-line 77, :end-column 30, :arglists (quote ([message file line-number column]))}, :name devtools.sanity-hints/make-sense-of-the-error, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 30, :method-params ([message file line-number column]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 4, :fn-var true, :arglists (quote ([message file line-number column]))}, type-error-to-string {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 93, :column 7, :end-line 93, :end-column 27, :arglists (quote ([]))}, :name devtools.sanity-hints/type-error-to-string, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, *processed-errors* {:name devtools.sanity-hints/*processed-errors*, :file "resources/public/js/devtools/sanity_hints.cljs", :line 36, :column 1, :end-line 36, :end-column 28, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 36, :column 10, :end-line 36, :end-column 28}}, uninstall! {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 124, :column 7, :end-line 124, :end-column 17, :arglists (quote ([]))}, :name devtools.sanity-hints/uninstall!, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, install-type-error-enhancer {:protocol-inline nil, :meta {:file "/Users/adam/Development/clojure/demo/calculator/resources/public/js/devtools/sanity_hints.cljs", :line 111, :column 7, :end-line 111, :end-column 34, :arglists (quote ([]))}, :name devtools.sanity-hints/install-type-error-enhancer, :variadic false, :file "resources/public/js/devtools/sanity_hints.cljs", :end-column 34, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:asset-root :ua-product :else *original-type-error-prototype-to-string* :sanity-hint-min-length :file :column :file-reader :line :chrome}, :order [:file-reader :sanity-hint-min-length :else :ua-product :chrome :asset-root :file :line :column *original-type-error-prototype-to-string*]}, :doc nil}